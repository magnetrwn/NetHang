name: "Format and lint"

on:
  push:
    branches:
    - main
    paths-ignore:
    - '.github/workflows/**'
  pull_request:
    branches:
    - main
  workflow_dispatch:

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install autoflake black isort
    - name: Formatting the code (autoflake, black, isort)
      run: |
        isort $(git ls-files '*.py')
        autoflake $(git ls-files '*.py') --in-place --remove-all-unused-imports --remove-unused-variables --recursive
        black $(git ls-files '*.py')
    - name: Pushing formatted code
      continue-on-error: true # Prevent fail from no diff on output
      run: |
        git config --global user.name "format-and-lint-action"
        git config --global user.email "username@users.noreply.github.com"
        git commit -a -m "Format and lint run"
        git push
  lint:
    runs-on: ubuntu-latest
    outputs:
      score: ${{ steps.pylint.outputs.score }}
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Evaluating pylint (all files)
      id: pylint
      run: | # Outputs only the score of the main file (NetHang.py)
        pylint $(git ls-files '*.py') --disable=C0103 --fail-under=9
        echo 'score='$(pylint NetHang.py --disable=C0103 | grep 'Your code' | cut -c29-32) >> $GITHUB_OUTPUT
  lint_score_readme:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v3
    - name: Pushing new pylint result to README.md (only NetHang.py)
      continue-on-error: true # Prevent fail from no diff on output
      run: |
        sed -i '4s/.*/[![pylint: ${{needs.lint.outputs.score}}](https:\/\/img.shields.io\/badge\/pylint-${{needs.lint.outputs.score}}-1c7d9e.svg)](https:\/\/github.com\/magnetrwn\/NetHang.py\/actions)/' README.md
        git config --global user.name "format-and-lint-action"
        git config --global user.email "username@users.noreply.github.com"
        git add README.md
        git commit -m "Format and lint run"
        git push
